@model RentHouseSystem.Models.FacilitiesHouse

@{
   
    Random rnd = new Random();
    int random = rnd.Next(1, 100000);
    DateTime currentDateTime = DateTime.Now;
}


<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Responsive Admin &amp; Dashboard Template based on Bootstrap 5">
    <meta name="author" content="AdminKit">
    <meta name="keywords" content="adminkit, bootstrap, bootstrap 5, admin, dashboard, template, responsive, css, sass, html, theme, front-end, ui kit, web">

    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link rel="shortcut icon" href="/img/icons/icon-48x48.png" />

    <link rel="canonical" href="https://demo-basic.adminkit.io/pages-blank.html" />

    <title>Blank Page | AdminKit Demo</title>

    <link href="/css/app.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
</head>

<body>
    <div class="wrapper">
        <nav id="sidebar" class="sidebar js-sidebar">
            <div class="sidebar-content js-simplebar">
                <a class="sidebar-brand" href="/Admin">
                    <span class="align-middle">AdminKit</span>
                </a>
                <partial name="_Navbar" />
        </nav>

        <div class="main">
            

            <main class="content">
                <div class="container-fluid">

                    <h1 class="h3 mb-3">Create</h1>

                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h3>  <a class="nav-link text-dark" asp-action="CommentsIndex">Back</a> </h3>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <form asp-action="Create">
                                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                                <input type="hidden" asp-for="HouseId" value="@random" />
                                                <div class="form-group">
                                                    <label asp-for="InventoryEquipment" class="control-label"></label>
                                                    <input asp-for="InventoryEquipment" class="form-control" />
                                                    <span asp-validation-for="InventoryEquipment" class="text-danger"></span>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="UtilityCost" class="control-label"></label>
                                                    <input asp-for="UtilityCost" class="form-control" />
                                                    <span asp-validation-for="UtilityCost" class="text-danger"></span>
                                                </div>
                                                <div class="form-group form-check">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" asp-for="AirConditioning" /> @Html.DisplayNameFor(model => model.AirConditioning)
                                                    </label>
                                                </div>
                                                <div class="form-group form-check">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" asp-for="MajorAppliances" /> @Html.DisplayNameFor(model => model.MajorAppliances)
                                                    </label>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="NumberOfBedroom" class="control-label"></label>
                                                    <input asp-for="NumberOfBedroom" class="form-control" />
                                                    <span asp-validation-for="NumberOfBedroom" class="text-danger"></span>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="ToiletAndBathroom" class="control-label"></label>
                                                    <input asp-for="ToiletAndBathroom" class="form-control" />
                                                    <span asp-validation-for="ToiletAndBathroom" class="text-danger"></span>
                                                </div>
                                                <div class="form-group form-check">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" asp-for="Pet" /> @Html.DisplayNameFor(model => model.Pet)
                                                    </label>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="DepositRequired" class="control-label"></label>
                                                    <input asp-for="DepositRequired" class="form-control" />
                                                    <span asp-validation-for="DepositRequired" class="text-danger"></span>
                                                </div>

                                                <div class="form-group">
                                                    <label asp-for="title" class="control-label"></label>
                                                    <input asp-for="title" class="form-control" />
                                                    <span asp-validation-for="title" class="text-danger"></span>
                                                </div>

                                                <div class="form-group">
                                                    <label asp-for="Description" class="control-label"></label>
                                                    <input asp-for="Description" class="form-control" />
                                                    <span asp-validation-for="Description" class="text-danger"></span>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="ContactPhone" class="control-label"></label>
                                                    <input asp-for="ContactPhone" class="form-control" />
                                                    <span asp-validation-for="ContactPhone" class="text-danger"></span>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="Address" class="control-label"></label>
                                                    <input asp-for="Address" class="form-control" />
                                                    <span asp-validation-for="Address" class="text-danger"></span>
                                                </div>
                                                <div class="form-group">
                                                    <label for="province">Province:</label>
                                                    <select id="province" name="province" required>
                                                        <option value="">Select a province</option>
                                                    </select>

                                                </div>
                                                <div class="form-group">
                                                    <label for="district">District:</label>
                                                    <select id="district" name="district" required>
                                                        <option value="">Select a district</option>
                                                    </select>

                                                </div>
                                                <div class="form-group">
                                                    <label for="ward">Ward:</label>
                                                    <select id="ward" name="ward" required>
                                                        <option value="">Select a ward</option>
                                                    </select>
                                                </div>
                                                <div class="form-group">
                                                    <label asp-for="AcceptableVehicles">Acceptable Vehicles:</label>
                                                    <select id="AcceptableVehicles" name="AcceptableVehicles" required>
                                                        <option value="bicycle">Bicycle</option>
                                                        <option value="motorbike">Motorbike</option>
                                                        <option value="both">Both</option>
                                                        <option value="noVehicles">No Vehicles</option>
                                                    </select>
                                                </div>
                                                <label for="closingTime">Closing Time:</label>
                                                <input type="time" id="closeTime" name="closeTime" required />
                                                <input type="hidden" asp-for="Status" value="pencding" class="form-control" />
                                                <input type="hidden" asp-for="CreatedAt" value="@currentDateTime" class="form-control" />
                                                <input type="hidden" asp-for="UpdatedAt" value="@currentDateTime" class="form-control" />
                                                <label for="images">Upload Images:</label>
                                                <input type="file" id="images" name="images" multiple>
                                                <div class="form-group">
                                                    <input type="submit" value="Create" class="btn btn-primary" />
                                                </div>
                                            </form>
                                        

                                   
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </main>


        </div>
    </div>

    <script src="/js/app.js"></script>
    <script>
        const provinceAPI = 'https://provinces.open-api.vn/api/p/';
        const districtAPI = 'https://provinces.open-api.vn/api/d/';
        const wardAPI = 'https://provinces.open-api.vn/api/w/';

        const provinceSelect = document.getElementById('province');
        const districtSelect = document.getElementById('district');
        const wardSelect = document.getElementById('ward');

        // Helper function to populate dropdown
        const populateDropdown = (dropdown, items, valueField, textField, defaultText) => {
            dropdown.innerHTML = `<option value="">${defaultText}</option>`;
            items.forEach(item => {
                const option = document.createElement('option');
                option.value = item[textField]; // Use text as value
                option.setAttribute('data-id', item[valueField]); // Store ID for reference
                option.textContent = item[textField];
                dropdown.appendChild(option);
            });
        };

        // Fetch provinces
        fetch(provinceAPI)
            .then(response => response.json())
            .then(data => {
                populateDropdown(provinceSelect, data, 'code', 'name', 'Select a province');
            })
            .catch(error => console.error('Error fetching provinces:', error));

        // Fetch districts based on province selection
        provinceSelect.addEventListener('change', () => {
            const provinceCode = provinceSelect.options[provinceSelect.selectedIndex].getAttribute('data-id');

            districtSelect.innerHTML = '<option value="">Select a district</option>';
            wardSelect.innerHTML = '<option value="">Select a ward</option>';

            if (provinceCode) {
                fetch(districtAPI)
                    .then(response => response.json())
                    .then(data => {
                        const filteredDistricts = data.filter(d => d.province_code == provinceCode);
                        populateDropdown(districtSelect, filteredDistricts, 'code', 'name', 'Select a district');
                    })
                    .catch(error => console.error('Error fetching districts:', error));
            }
        });

        // Fetch wards based on district selection
        districtSelect.addEventListener('change', () => {
            const districtCode = districtSelect.options[districtSelect.selectedIndex].getAttribute('data-id');

            wardSelect.innerHTML = '<option value="">Select a ward</option>';

            if (districtCode) {
                fetch(wardAPI)
                    .then(response => response.json())
                    .then(data => {
                        const filteredWards = data.filter(w => w.district_code == districtCode);
                        populateDropdown(wardSelect, filteredWards, 'code', 'name', 'Select a ward');
                    })
                    .catch(error => console.error('Error fetching wards:', error));
            }
        });

    </script>
</body>

</html>

















